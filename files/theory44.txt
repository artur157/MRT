<p>Быстрая сортировка относится к алгоритмам «разделяй и властвуй». Алгоритм состоит из трёх шагов: 
<ol><li>Выбрать элемент из массива. Назовём его опорным.</li>
<li>Разбиение: перераспределение элементов в массиве таким образом, что элементы меньше опорного помещаются перед ним, а больше или равные после.</li>
<li>Рекурсивно применить первые два шага к двум подмассивам слева и справа от опорного элемента. Рекурсия не применяется к массиву, в котором только один элемент или отсутствуют элементы.</li></ol>
<p>Для улучшения эффективности может выбираться средний, случайный элемент или (для больших массивов) медиана первого, среднего и последнего элементов. Медиана всей последовательности является оптимальным опорным элементом, но её вычисление слишком трудоёмко для использования в сортировке.</p>
<p>Рассмотрим программную реализацию.</p>
<pre>

const N = …; {количество элементов массива}
TArr1 = Array[1..N] of integer;
var A: TArr1; i, j: integer;

procedure Swap(var A1, A2: integer); {обмен местами переменных}
var tmp: integer;
begin
  tmp:= A1; 
  A1:= A2; 
  A2:= tmp;
end;

procedure QuickSort(var A: TArr1; Lo, Hi: integer);
  procedure Sort(L, R: integer);
  var i, j, key: integer;
  begin
    i:= L; 
    j:= R; 
    key:= A[(L+R) div 2];
    repeat
      while A[i] < key do i:= i+1;
      while key < A[j] do j:= j-1;
      if i <= j then begin
        Swap(A[i], A[j]);
        i:= i+1; 
        j:= j-1;
      end
    until i > j;
    if L < j then Sort(L, j);
    if i < R then Sort(i, R);
  end;
begin {QuickSort}
  Sort(Lo,Hi);
end;
</pre>
